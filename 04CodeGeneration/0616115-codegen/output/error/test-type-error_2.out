********************************
*       No syntax error!       *
********************************
L0:NodeType: Root
	L1:NodeType: ID val:aa
	L1:NodeType: DECLARATIONS
		L2:NodeType: ID_LIST
			L3:NodeType: ID val:input
			L3:NodeType: ID val:output
			L3:NodeType: ID val:error
		L2:NodeType: TYPE_PROGRAM_ARG
	L1:NodeType: DECLARATIONS_ROOT
		L2:NodeType: DECLARATIONS
			L3:NodeType: ID_LIST
				L4:NodeType: ID val:a
				L4:NodeType: ID val:b
			L3:NodeType: TYPE_INT
		L2:NodeType: DECLARATIONS
			L3:NodeType: ID_LIST
				L4:NodeType: ID val:c
			L3:NodeType: TYPE_REAL
	L1:NodeType: SUBPDECLARATIONS
		L2:NodeType: FUNCTION
			L3:NodeType: ID val:bb
			L3:NodeType: ARGUMENTS
				L4:NodeType: ARGUMENT
					L5:NodeType: ID_LIST
						L6:NodeType: ID val:a
						L6:NodeType: ID val:b
					L5:NodeType: TYPE_INT
			L3:NodeType: TYPE_INT
			L3:NodeType: DECLARATIONS_ROOT
				L4:NodeType: DECLARATIONS
					L5:NodeType: ID_LIST
						L6:NodeType: ID val:c
					L5:NodeType: TYPE_INT
				L4:NodeType: DECLARATIONS
					L5:NodeType: ID_LIST
						L6:NodeType: ID val:d
					L5:NodeType: TYPE_INT
						L6:NodeType: TYPE_ARR
							L7:NodeType: Number,Val: 1.000000
							L7:NodeType: Number,Val: 2.000000
			L3:NodeType: SUBPDECLARATIONS
			L3:NodeType: STATEMENT_LIST
				L4:NodeType: ASSIGN_OP
					L5:NodeType: VARREF
						L6:NodeType: ID val:a
						L6:NodeType: ARR_SUFFIXES
					L5:NodeType: Number,Val: 1.000000
				L4:NodeType: ASSIGN_OP
					L5:NodeType: VARREF
						L6:NodeType: ID val:c
						L6:NodeType: ARR_SUFFIXES
					L5:NodeType: Number,Val: 0.500000
				L4:NodeType: ASSIGN_OP
					L5:NodeType: VARREF
						L6:NodeType: ID val:d
						L6:NodeType: ARR_SUFFIXES
							L7:NodeType: Number,Val: 1.000000
					L5:NodeType: VARREF
						L6:NodeType: ID val:a
						L6:NodeType: ARR_SUFFIXES
				L4:NodeType: ASSIGN_OP
					L5:NodeType: VARREF
						L6:NodeType: ID val:b
						L6:NodeType: ARR_SUFFIXES
					L:5,Id:64,BinaryExpr,oprtr: ADD
						L6:NodeType: Number,Val: 0.100000
						L6:NodeType: VARREF
							L7:NodeType: ID val:d
							L7:NodeType: ARR_SUFFIXES
				L4:NodeType: ASSIGN_OP
					L5:NodeType: VARREF
						L6:NodeType: ID val:bb
						L6:NodeType: ARR_SUFFIXES
					L5:NodeType: Number,Val: 5.000000
	L1:NodeType: STATEMENT_LIST
		L2:NodeType: ASSIGN_OP
			L3:NodeType: VARREF
				L4:NodeType: ID val:a
				L4:NodeType: ARR_SUFFIXES
			L3:NodeType: Number,Val: 3.000000
NOTICE: Opening Scope as we perform semantic check
NOTICE: We have added variable "input" in line 0 to symbol table. At depth 0 
NOTICE: We have added variable "output" in line 0 to symbol table. At depth 0 
NOTICE: We have added variable "error" in line 0 to symbol table. At depth 0 
NOTICE: We have added variable "a" in line 2 to symbol table. At depth 0 
NOTICE: We have added variable "b" in line 2 to symbol table. At depth 0 
NOTICE: We have added variable "c" in line 3 to symbol table. At depth 0 
NOTICE: We have added function "bb" in line 5 to symbol table. At depth 0 
NOTICE: Opening Scope as we perform semantic check
NOTICE: We have found the same variable "a" in an outer scope. This is not an error.just letting you know
Removed from chain
NOTICE: We have added variable "a" in line 5 to symbol table. At depth 1 
NOTICE: We have found the same variable "b" in an outer scope. This is not an error.just letting you know
Removed from chain
NOTICE: We have added variable "b" in line 5 to symbol table. At depth 1 
NOTICE: We have found the same variable "c" in an outer scope. This is not an error.just letting you know
Removed from chain
NOTICE: We have added variable "c" in line 6 to symbol table. At depth 1 
NOTICE: We have added variable "d" in line 7 to symbol table. At depth 1 


NOTICE at around Line(9): The var "a" is now initialized 


Semantic Error at or around Line(10):Incompatible LHS and RHS Types for assignment(TYPE_INT=TYPE_REAL).


NOTICE at around Line(11): The var "d" is now initialized 


Semantic Error at or around Line(12):Trying to perform a binary operation(Arithmetic, Relational, or Logical) on an array. This is illegal.


NOTICE at around Line(13): The var "bb" is now initialized 
NOTICE: Closing Scope as we perform semantic check
****************************************
*    Open Scope SymbolTable            *
****************************************
Name : a, Type:TYPE_INT, Class VAR, Depth 1, Dimension:0 
Name : b, Type:TYPE_INT, Class VAR, Depth 1, Dimension:0 
Name : c, Type:TYPE_INT, Class VAR, Depth 1, Dimension:0 
Name : d, Type:TYPE_INT, Class VAR, Depth 1, Dimension:1 Ranges:(1,2),
****************************************
*   Closed Scope SymbolTable           *
****************************************


NOTICE at around Line(17): The var "a" is now initialized 
NOTICE: Closing Scope as we perform semantic check
****************************************
*    Open Scope SymbolTable            *
****************************************
Name : input, Type:TYPE_VOID, Class VAR, Depth 0, Dimension:0 
Name : output, Type:TYPE_VOID, Class VAR, Depth 0, Dimension:0 
Name : error, Type:TYPE_VOID, Class VAR, Depth 0, Dimension:0 
Name : a, Type:TYPE_INT, Class VAR, Depth 0, Dimension:0 
Name : b, Type:TYPE_INT, Class VAR, Depth 0, Dimension:0 
Name : c, Type:TYPE_REAL, Class VAR, Depth 0, Dimension:0 
Name : bb, Type:TYPE_INT, Class FUNCTION, Depth 0, Dimension:0 Params: a(Type:TYPE_INT)(Dim:0)b(Type:TYPE_INT)(Dim:0)
****************************************
*   Closed Scope SymbolTable           *
****************************************



We are now printing all the symbol tables encountered
****************************************
*    Open Scope SymbolTable            *
****************************************
Name : input, Type:TYPE_VOID, Class VAR, Depth 0, IsArray:NO,
Name : output, Type:TYPE_VOID, Class VAR, Depth 0, IsArray:NO,
Name : error, Type:TYPE_VOID, Class VAR, Depth 0, IsArray:NO,
Name : a, Type:TYPE_INT, Class VAR, Depth 0, IsArray:NO,
Name : b, Type:TYPE_INT, Class VAR, Depth 0, IsArray:NO,
Name : c, Type:TYPE_REAL, Class VAR, Depth 0, IsArray:NO,
Name : bb, Type:TYPE_INT, Class FUNCTION, Depth 0, IsArray:NO,Params: a(Type:TYPE_INT)(Dim:0)b(Type:TYPE_INT)(Dim:0)
****************************************
*   Closed Scope SymbolTable           *
****************************************
****************************************
*    Open Scope SymbolTable            *
****************************************
Name : a, Type:TYPE_INT, Class VAR, Depth 1, IsArray:NO,
Name : b, Type:TYPE_INT, Class VAR, Depth 1, IsArray:NO,
Name : c, Type:TYPE_INT, Class VAR, Depth 1, IsArray:NO,
Name : d, Type:TYPE_INT, Class VAR, Depth 1, IsArray:YES,Ranges:(1,2),
****************************************
*   Closed Scope SymbolTable           *
****************************************
********************************
*    Semantic Check Done!      *
********************************
