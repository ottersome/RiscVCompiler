README for the Parser project






For the second part of the compiler project, you will need to implement a parser. The syntax of our target langauge {\it Mini-Pascal} is given in the file MINI-PASCAL-GRAMMAR.txt in the 00MINI-PASCAL-LANGUAGE-SPEC directory. 

You will use the yacc (or bison) tool.  You need to prepare for the input for the yacc tool. A sample input --- the standard-pascal.y file, which is the syntax for the {\it complete} Pascal language --- is provided. You may modify the grammar to fit your project.

For the parser project, you need to turn off the output of the scanner. The parser will produce its own output.

If the input contains no syntactic errors, the output of the parser will be the string "OK".
Otherwise, the parser will issue an error message such as

        line 23: error token ident

Your parser does not need to do error recovery. It will stop at the first error.

The file "standard-pascal.y" contains the complete grammar for Standard Pascal. You can try to run yacc on this grammar:

	yacc standard-pascal.y

Two files should be generated: y.tab.c and y.tab.h. Then you may combine the scanner (generated by lex) with the parser (generated by yacc).  See the file "Communication between Lex and Yacc.pdf" for combing lex and yacc.

In the TEST-COMPILER02-FOR-PARSER directory, there are several Mini-Pascal programs. You may use them to try your parser.

If you still have problems, please come to discuss with me.  Please do not leave the project blank.

For the 2nd (parser) project, you need to turn in your lex files, yacc files, semantic routine files, test cases, and the executable code. You also need to write a readme.txt file for the project, telling the TA how to run your program. You also need to turn in a file output.txt showing the output of your program. For the output, you can also show the screen dump (as a jpg file) when running your program.

Put all of the above files in a single zip file which will be named "DDDDDDD-parser.zip", where
DDDDDDD is your student id. Upload the zip to the new e3 platform.

Deadline of the scanner project is October 30, 2019, 23:55 pm.
--

附註

在PARSER-PROJECT-HANDOUT中，是standard-pascal.y。我們沒有提供mini-pascal.y。但是在MINI-PASCAL-LANGUAGE-SPEC，我們有MINI-PASCAL-GRAMMAR.txt (grammar)，你可以將此mini-pascal的文法，改寫成yacc的格式，再執行yacc 。

y.tab.h是由yacc產生，必須先執行yacc才看得到。


